@model RestaurantManage.Models.Login

@{
    Layout = "~/Views/Shared/HomeLayout.cshtml";
}

<h2>@ViewData["Title"]</h2>

<div class="loginpage-form">
    <form asp-action="Login" method="post" id="loginForm">
        @Html.AntiForgeryToken()
        <div>
            <h2>Sign In</h2>
        </div>

        <div class="loginform-group">
            <label for="Username">Username</label>
            <input type="text" id="Username" name="Username" value="@Model.Username" />
            <span class="loginerrorClass" id="usernameError"></span>
            @Html.ValidationMessageFor(model => model.Username, null, new { @class = "loginerrorClass" })
        </div>

        <div class="loginform-group">
            <label for="Password">Password</label>
            <input type="password" id="Password" name="Password" />
            <span class="loginerrorClass" id="passwordError"></span>
            @Html.ValidationMessageFor(model => model.Password, null, new { @class = "loginerrorClass" })
        </div>

        <div class="loginform-group">
            <a href="#" class="forgot-password">Forgot Password?</a>
        </div>

        @if (!string.IsNullOrEmpty(ViewData["ErrorMessage"]?.ToString()))
        {
            <div class="loginerrorClass">
                @ViewData["ErrorMessage"]
            </div>
        }

        <div class="loginform-actions">
            <button type="submit" class="loginsubmit-button">Login</button>
        </div>

        <div class="loginadditional-links">
            <a href="@Url.Action("RegisterUser", "Restaurant")" class="sign-up">Not a member? Sign Up</a>
        </div>
    </form>
</div>

<script>
    document.getElementById("Username").addEventListener("focusout", function () {
        const username = this.value.trim();
        const usernameError = document.getElementById("usernameError");
        if (!username) {
            usernameError.textContent = "Username cannot be empty.";
        } else {
            usernameError.textContent = "";
        }
    });

    document.getElementById("Password").addEventListener("focusout", function () {
        const password = this.value.trim();
        const passwordError = document.getElementById("passwordError");
        if (!password) {
            passwordError.textContent = "Password cannot be empty.";
        } else {
            passwordError.textContent = "";
        }
    });
</script>
